name: CI/CD pipline

on:
  push:
    branches: [ "main" ]

jobs:
  test-app:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Prepare unit tests
        run: |
          sudo apt update
          sudo apt install -y python3-pip
          pip install -r requirements.txt
      - name: Run unit tests
        run: |
          python -m pytest ./tests/unit

      - name: Run integration tests
        run: |
          python -m pytest ./tests/integration

    build-and-push-to-dh:
      name: Build and push to DockerHub
      needs: [ test-app ]
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3

        - name: Build docker image
          run: |
            docker build . --file Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/app_food:latest

        - name: Login to DockerHub
          uses: docker/login-action@v3.0.0
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}


        - name: Build and push app_food service image
          run: |
            docker push ${{ secrets.DOCKER_USERNAME }}/app_food:latest
            
            

    build-and-push-to-yc:
      name: Build and push to YandexCloud Registry
      needs: [ test-app ]
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3

        - name: Build docker image
          run: |
            docker build . -file Dockerfile --tag cr.yandex/${{ secrets.YC_REGISTRY_ID }}/dangid1/delivery_service/app_food:latest

        - name: Login to YC Registry
          uses: docker/login-action@v3.0.0
          with:
            registry: cr.yandex
            username: json_key
            password: ${{ secrets.YC_KEYS }}

        - name: Push tag YC Registry
          run: |
            docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/dangid1/delivery_service/app_food:latest
            
            
    deploy:
      name: Deploy
      runs-on: ubuntu-latest
      needs: [ build-and-push-to-yc ]
      steps:
        - name: Deploy serverless container
          uses: yc-actions/yc-sls-container-deploy@v1
          with:
            yc-sa-json-credentials: ${{ secrets.YC_KEYS }}
            container-name: ${{ secrets.YC_CONTAINER_NAME }}
            folder-id: ${{ secrets.YC_FOLDER_ID }}
            revision-image-url: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/dangid1/delivery_service/app_food:latest
            revision-service-account-id: ${{ secrets.YC_SA_ID }}
            revision-env: |
              POSTGRES_URL_FOOD=${{ secrets.ENV_POSTGRES_URL_FOOD }}
              AMQP_URL=${{ secrets.ENV_AMQP_URL }}






